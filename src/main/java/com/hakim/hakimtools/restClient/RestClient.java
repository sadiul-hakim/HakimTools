package com.hakim.hakimtools.restClient;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.IOException;
import java.net.URISyntaxException;
import java.util.Collections;
import java.util.HashMap;
import java.util.Map;
import java.util.concurrent.Executors;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 * @author Hakim
 */
public class RestClient extends JFrame {

    /**
     * Creates new form RestClient
     */
    public RestClient() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        methodChooser = new JComboBox<>();
        urlField = new JTextField();
        sendBtn = new JButton();
        jScrollPane3 = new JScrollPane();
        headerField = new JTextArea();
        jScrollPane1 = new JScrollPane();
        bodyField = new JTextArea();
        jLabel1 = new JLabel();
        jLabel2 = new JLabel();
        jLabel3 = new JLabel();
        jScrollPane2 = new JScrollPane();
        responseField = new JEditorPane();

        setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        methodChooser.setFont(new Font("Fira Code", 0, 14)); // NOI18N
        methodChooser.setModel(new DefaultComboBoxModel<>(new String[]{"GET", "POST", "PUT", "DELETE"}));
        methodChooser.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                methodChooserActionPerformed(evt);
            }
        });

        urlField.setFont(new Font("Fira Code", 0, 14)); // NOI18N
        urlField.setToolTipText("URL");

        sendBtn.setFont(new Font("Fira Code", 0, 14)); // NOI18N
        sendBtn.setText("Send");
        sendBtn.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                sendBtnActionPerformed(evt);
            }
        });

        headerField.setColumns(20);
        headerField.setFont(new Font("Fira Code", 0, 12)); // NOI18N
        headerField.setRows(5);
        headerField.setToolTipText(": separated header, One header per line");
        jScrollPane3.setViewportView(headerField);

        bodyField.setColumns(20);
        bodyField.setFont(new Font("Fira Code", 0, 12)); // NOI18N
        bodyField.setRows(5);
        bodyField.setEnabled(false);
        jScrollPane1.setViewportView(bodyField);

        jLabel1.setFont(new Font("Fira Code", 0, 14)); // NOI18N
        jLabel1.setText("Headers ");

        jLabel2.setFont(new Font("Fira Code", 0, 14)); // NOI18N
        jLabel2.setText("Body");

        jLabel3.setFont(new Font("Fira Code", 0, 14)); // NOI18N
        jLabel3.setText("Response");

        responseField.setEditable(false);
        responseField.setFont(new Font("Fira Code", 0, 14)); // NOI18N
        jScrollPane2.setViewportView(responseField);

        GroupLayout layout = new GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                        .addComponent(jScrollPane2)
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(methodChooser, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(urlField)
                                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(sendBtn))
                                        .addGroup(GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addComponent(jLabel1)
                                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jLabel2)
                                                .addGap(627, 627, 627))
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(jScrollPane3, GroupLayout.DEFAULT_SIZE, 582, Short.MAX_VALUE)
                                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jScrollPane1, GroupLayout.PREFERRED_SIZE, 659, GroupLayout.PREFERRED_SIZE)
                                                .addGap(2, 2, 2))
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel3)
                                                .addGap(0, 0, Short.MAX_VALUE)))
                                .addContainerGap())
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                        .addComponent(methodChooser, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                        .addComponent(urlField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                        .addComponent(sendBtn))
                                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel1)
                                        .addComponent(jLabel2))
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jScrollPane3, GroupLayout.DEFAULT_SIZE, 206, Short.MAX_VALUE)
                                        .addComponent(jScrollPane1))
                                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel3)
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane2, GroupLayout.DEFAULT_SIZE, 510, Short.MAX_VALUE)
                                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void methodChooserActionPerformed(ActionEvent evt) {//GEN-FIRST:event_methodChooserActionPerformed
        String method = (String) methodChooser.getSelectedItem();

        assert method != null;
        bodyField.setEnabled(method.equalsIgnoreCase("post") || method.equalsIgnoreCase("put"));
    }//GEN-LAST:event_methodChooserActionPerformed

    private void sendBtnActionPerformed(ActionEvent evt) {//GEN-FIRST:event_sendBtnActionPerformed

        String url = urlField.getText();
        if (url.isEmpty()) {
            JOptionPane.showMessageDialog(null, "URL Can not be empty!");
            return;
        }

        Map<String, String> headers = parseHeaders();

        String method = (String) methodChooser.getSelectedItem();
        try (var service = Executors.newVirtualThreadPerTaskExecutor()) {
            switch (method) {
                case "GET" -> {
                    service.submit(() -> {
                        try {
                            String response = WebClient.sendGetRequest(url, headers);
                            responseField.setText(response);
                        } catch (URISyntaxException | IOException | InterruptedException e) {
                            throw new RuntimeException(e);
                        }
                    });
                }
                case null -> {

                }
                default -> throw new IllegalStateException("Unexpected value: " + method);
            }
        } catch (Exception ex) {
            System.out.println(ex.getMessage());
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }
    }//GEN-LAST:event_sendBtnActionPerformed

    private Map<String, String> parseHeaders() {
        String headers = headerField.getText();
        if (headers.isEmpty()) {
            return Collections.emptyMap();
        }

        String[] lines = headers.split("\\n");

        Map<String, String> headersMap = new HashMap<>();
        for (String line : lines) {
            String[] arr = line.split(":");
            headersMap.put(arr[0], arr[1]);
        }

        return headersMap;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (UIManager.LookAndFeelInfo info : UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException |
                 UnsupportedLookAndFeelException ex) {
            Logger.getLogger(RestClient.class.getName()).log(Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RestClient().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private JTextArea bodyField;
    private JTextArea headerField;
    private JLabel jLabel1;
    private JLabel jLabel2;
    private JLabel jLabel3;
    private JScrollPane jScrollPane1;
    private JScrollPane jScrollPane2;
    private JScrollPane jScrollPane3;
    private JComboBox<String> methodChooser;
    private JEditorPane responseField;
    private JButton sendBtn;
    private JTextField urlField;
    // End of variables declaration//GEN-END:variables
}
