package com.hakim.hakimtools.file;

import com.formdev.flatlaf.FlatLightLaf;
import com.hakim.hakimtools.util.ExcelUtil;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Hakim
 */
public class FileReader extends javax.swing.JFrame {

    private File file;

    /**
     * Creates new form FileReader
     */
    public FileReader() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        chooseBtn = new javax.swing.JButton();
        scrollPane = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        sheetName = new javax.swing.JTextField();
        showBtn = new javax.swing.JButton();
        showFileName = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("File Reader");

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        chooseBtn.setFont(new java.awt.Font("Fira Code", 0, 12)); // NOI18N
        chooseBtn.setText("Choose");
        chooseBtn.addActionListener(this::chooseBtnActionPerformed);

        scrollPane.setToolTipText("");
        scrollPane.setAutoscrolls(true);

        table.setAutoCreateRowSorter(true);
        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "A", "B", "C", "D"
            }
        ));
        table.setFillsViewportHeight(true);
        table.setGridColor(new java.awt.Color(0, 153, 153));
        table.setShowGrid(true);
        scrollPane.setViewportView(table);

        sheetName.setFont(new java.awt.Font("Fira Code", 0, 12)); // NOI18N
        sheetName.setToolTipText("Sheet Name");

        showBtn.setText("Show");
        showBtn.addActionListener(this::showBtnActionPerformed);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(scrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 1200, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(chooseBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(showFileName, javax.swing.GroupLayout.PREFERRED_SIZE, 499, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(sheetName, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(showBtn)
                        .addGap(6, 6, 6)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(showFileName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(chooseBtn)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(sheetName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(showBtn))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 789, Short.MAX_VALUE)
                .addGap(8, 8, 8))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void chooseBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chooseBtnActionPerformed

        try {

            fileChooser = new JFileChooser();
            File selctedFile = null;
            int openSelection = fileChooser.showOpenDialog(null);

            if (openSelection != JFileChooser.APPROVE_OPTION) {
                return;
            } else {
                selctedFile = fileChooser.getSelectedFile();
            }

            String[] fileName = selctedFile.getName().split("\\.");
            if (!(fileName[fileName.length - 1].equals("xlsx") || fileName[fileName.length - 1].equals("xls") || fileName[fileName.length - 1].equals("csv"))) {
                JOptionPane.showMessageDialog(null, "Only xls,xlsx and csv files are valid!");
                return;
            }

            showFileName.setText(selctedFile.getName());

            file = selctedFile;
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_chooseBtnActionPerformed

    private void showBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showBtnActionPerformed

        List<List<Object>> data = new ArrayList<>();
        String sheetNameText = sheetName.getText();

        String[] fileName = file.getName().split("\\.");
        if (fileName[fileName.length - 1].equals("xlsx") || fileName[fileName.length - 1].equals("xls")) {

            if (sheetNameText.isEmpty()) {
                JOptionPane.showMessageDialog(null, "Sheet name can not be empty!");
                return;
            }
            data = ExcelUtil.readExcel(file.getAbsolutePath(), sheetNameText);
        } else {
            data = ExcelUtil.readCsv(file.getAbsolutePath());
        }

        List<Object> headers = data.get(0);
        data.remove(0);
        DefaultTableModel model = new DefaultTableModel(headers.toArray(), 0);

        for (List<Object> row : data) {
            model.addRow(row.toArray());
        }

        table.setModel(model);
    }//GEN-LAST:event_showBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        try {
            UIManager.setLookAndFeel(new FlatLightLaf());
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FileReader.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FileReader().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton chooseBtn;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane scrollPane;
    private javax.swing.JTextField sheetName;
    private javax.swing.JButton showBtn;
    private javax.swing.JLabel showFileName;
    private javax.swing.JTable table;
    // End of variables declaration//GEN-END:variables
    private JFileChooser fileChooser;
}
